<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example.maven</groupId>
    <artifactId>maven-it-with-docker</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <dependencies>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>3.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.9.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.3.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <id>vagrant-up</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>vagrant</executable>
                            <arguments>
                                <argument>up</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>vagrant-destroy</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>vagrant</executable>
                            <arguments>
                                <argument>destroy</argument>
                                <argument>-f</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <skip>${vagrant.skip}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>port-allocator-maven-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>allocate-ports</goal>
                        </goals>
                        <configuration>
                            <ports>
                                <port>
                                    <name>MongoDbServiceStartupLogIT.port</name>
                                </port>
                            </ports>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.15.1</version>
                <configuration>
                    <dockerHost>${docker.host.url}</dockerHost>
                    <images>
                        <image>
                            <name>mongo:latest</name>
                            <run>
                                <ports>
                                    <port>${MongoDbServiceStartupLogIT.port}:27017</port>
                                </ports>
                                <wait>
                                    <log>waiting for connections on port</log>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <name>mongo:latest</name>
                            <run>
                                <ports>
                                    <port>${MongoDbServiceAdminDbIT.port}:27017</port>
                                </ports>
                                <wait>
                                    <log>waiting for connections on port</log>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <systemPropertyVariables>
                        <mongodb.host>${docker.host.address}</mongodb.host>
                        <MongoDbServiceStartupLogIT.port>${MongoDbServiceStartupLogIT.port}</MongoDbServiceStartupLogIT.port>
                        <MongoDbServiceAdminDbIT.port>${MongoDbServiceAdminDbIT.port}</MongoDbServiceAdminDbIT.port>
                    </systemPropertyVariables>
                    <!--
                    Since the tests set system variables (ports) we cannot reuse the same JVM for all tests.
                    Here we make failsafe fork a new JVM for each test, running tests serially.
                    Setting forkCount to the number of test makes failsafe run tests in parallel.
                    While that speeds things up a lot, it is going to break when number of tests changes.
                    -->
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>linux</family>
                </os>
            </activation>
            <properties>
                <vagrant.skip>true</vagrant.skip>
                <docker.host.address>localhost</docker.host.address>
                <docker.host.url>unix:///var/run/docker.sock</docker.host.url>
            </properties>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <vagrant.skip>false</vagrant.skip>
                <docker.host.address>192.168.60.30</docker.host.address>
                <docker.host.url>tcp://${docker.host.address}:2375</docker.host.url>
            </properties>
        </profile>
    </profiles>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
</project>
